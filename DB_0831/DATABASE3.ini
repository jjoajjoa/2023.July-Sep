- 서브쿼리
SQL 쿼리 내부에 포함된 쿼리로, 다른 쿼리의 일부로 사용되기 위한 쿼리다. 주로 SELECT, FROM, WHERE 절에서 사용된다.
복잡한 데이터 조작이나 필터링을 가능하게 해준다.

중첩된 여러 개의 서브쿼리를 사용 가능하며 비효율적인 작성 방식을 피할 수 있어 쿼리를 최적화할 수 있다.
대량 데이터나 복잡한 쿼리에서 성능 문제가 발생할 수 있다.

1. 단일행 서브쿼리(Single-Row Subquery) || 스칼라 서브쿼리(Scalar Subquery)
단일 행만을 반환하기 위한 서브쿼리 (단일값 포함)
일반적으로 SELECT, WHERE에서 사용된다. 반환된 단일 값은 메인 쿼리에서 비교연산자에서 사용되거나 출력 결과에 포함시킬 수 있다.

- SELECT 절
SELECT EMPNO, ENAME, (SELECT GRADE FROM SALGRADE WHERE EMP.SAL BETWEEN LOWSAL AND HIGHSAL) AS SAL
FROM EMP;

- WHERE 절
SELECT ENAME, HIREDATE
FROM EMP
WHERE HIREDATE >= (SELECT MAX(HIREDATE) FROM EMP);

2. 다중행 쿼리(Multi-Row Subquery)
여러 개의 행을 반환하기 위한 서브쿼리
일반적으로 IN, ANY, ALL, EXISTS와 같은 연산자와 함께 사용된다. 또한, WHERE절이나 FROM절에서 사용된다.
반환된 여러 행은 메인 쿼리의 조건과 비교해서 필터링하거나 결합시킬 수 있다.

1) IN 연산자
메인 쿼리의 조건식에서 다중행 서브쿼리를 사용하여 특정 값이 포함되어 있는지 확인할 수 있다.

2) EXISTS 연산자
메인 쿼리가 하위 집합 내에 결과가 있는지 확인하고 싶을 때 사용한다.

3) ALL, ANY 연산자
메인 쿼리의 열 값과 서브쿼리 결과 중 하나 이상 또는 모든 값을 비교한다.
WHERE column > ANY(subquery)

비교연산자와 함께 사용하는 경우
SELECT ENAME, SAL
FROM EMP E1 
WHERE (E1.EMPNO, E1.DEMPNO) = (E2.SELECT E2.ENAME, SAL FROM EMP E2 WHERE E2.DEMPNO = 123);

3. 인라인 뷰(Inline View) FROM절에서 사용되는 서브쿼리

1) 임시로 테이블 형태의 결과 집합을 생성하는 방법

장점: 복잡한 쿼리를 단순화, 유지보수성, 가독성

SELECT column1, column2 ...
FROM (Subquery) AS alias

2) WITH 절
CTE(Common Table Expression) 명명된 임시 테이블 형태로 중복을 줄이는데 도움이 된다.

EMP 테이블에서 가장 높은 급여를 받는 직원의 이름과 급여를 출력
ENAME   SAL
KING	5000

DEPT 테이블에서 각 부서별로 속한 직원의 수와 평균 급여를 출력
DEPTNO  EMP_COUNT   AVER_SAL
10         3         2916
20         3         2258
30	       6	     1567

EMP 테이블에서 각 직원의 이름과 급여를 조회하고, 해당 직원의 급여가 부서 평균 급여보다 높은 경우에만 출력
7499	ALLEN	SALESMAN	7698	1981/02/20	1600	300	30	30	1566
7698	BLAKE	MANAGER	7839	1981/05/01	2850		30	30	1566
7839	KING	PRESIDENT		1981/11/17	5000		10	10	2916
7566	JONES	MANAGER	7839	1981/04/02	2975		20	20	2258
7902	FORD	ANALYST	7566	1981/12/03	3000		20	20	2258

EMP 테이블에서 부서 번호가 10인 부서에 속한 직원들 중에서 급여가 3000 이상인 직원의 이름과 급여를 출력
ENAME   SAL
KING	5000

각 직원의 이름과 부서 이름을 출력. (부서 번호 대신 부서 이름)
각 직원의 이름과 해당 직원의 급여를 조회하되, 급여가 부서 평균 급여보다 높은 경우에는 "상위"라고 표시하고 그 외에는 "일반"이라고 출력
각 부서별로 속한 직원의 수와 평균 급여를 조회하되, 급여가 해당 부서의 평균 급여보다 높은 직원의 이름과 급여를 함께 출력(평균 급여 내림차순으로 정렬)
각 직원의 이름과 보너스를 조회하되, 보너스가 없는 직원들 중에서 가장 급여가 높은 직원의 이름과 급여를 출력